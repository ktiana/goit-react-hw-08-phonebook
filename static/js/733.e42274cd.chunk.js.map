{"version":3,"file":"static/js/733.e42274cd.chunk.js","mappings":"kNACA,EAAuB,oBAAvB,EAAmD,qB,6BCyCnD,EAnCc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAgB9B,OACE,kBAAMC,UAAWC,EAAUC,SAfR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfX,GACEY,EAAAA,EAAAA,IAAU,CACRC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAEnCE,MAAK,SAAAC,GACLC,EAAAA,GAAAA,QAAA,wBAA+BD,EAASE,QAAQC,KAAKC,MACtD,IACDZ,EAAKa,OACN,EAGoDC,aAAa,MAAhE,WACE,mBAAOnB,UAAWC,EAAlB,mBAEE,kBAAOmB,KAAK,QAAQH,KAAK,QAAQI,UAAQ,QAE3C,mBAAOrB,UAAWC,EAAlB,sBAEE,kBAAOmB,KAAK,WAAWH,KAAK,WAAWI,UAAQ,QAEjD,mBAAQD,KAAK,SAASE,SAAUzB,EAAhC,sBAKL,C,sKCtCY0B,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtB3B,EAAkB,SAAAyB,GAAK,OAAIA,EAAMC,SAAS5B,SAAnB,EAEvB8B,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAEnBC,EAAoB,SAAAL,GAAK,OAAIA,EAAMM,MAAV,EAEzBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAAgBM,IACjB,SAACJ,EAAUK,GACT,GAAKL,EACL,OAAOA,EAASK,QAAO,SAAAG,GAAO,OAC5BA,EAAQhB,KAAKiB,cAAcC,SAASL,EAAOI,cADf,GAG/B,G","sources":["webpack://goit-react-hw-08-phonebook/./src/Pages/Login/Login.module.css?c471","Pages/Login/LoginForm.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__l5-+y\",\"label\":\"Login_label__aj9QJ\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { loginUser } from 'redux/user/operations';\nimport css from './Login.module.css';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      loginUser({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    ).then(response => {\n      toast.success(`Welcome back, ${response.payload.user.name}`);\n    });\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input type=\"email\" name=\"email\" required />\n      </label>\n      <label className={css.label}>\n        Password\n        <input type=\"password\" name=\"password\" required />\n      </label>\n      <button type=\"submit\" disabled={isLoading}>\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default Login;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["dispatch","useDispatch","isLoading","useSelector","selectIsLoading","className","css","onSubmit","e","preventDefault","form","currentTarget","loginUser","email","elements","value","password","then","response","toast","payload","user","name","reset","autoComplete","type","required","disabled","selectContacts","state","contacts","items","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes"],"sourceRoot":""}